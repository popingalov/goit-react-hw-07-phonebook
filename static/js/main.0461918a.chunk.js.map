{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactListItem.module.scss","redux/contacts/contactsApi.js","Components/Spiner/Spiner.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/store.js","index.js","Components/Spiner/Spiner.module.css"],"names":["module","exports","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","addContact","mutation","contactContent","url","method","body","name","number","invalidatesTags","deleteContact","contactId","useFetchContactsQuery","useAddContactMutation","useDeleteContactMutation","Spiner","className","s","loader","inner","one","two","three","ContactForm","contacts","useState","setName","setNumber","createContact","isFetching","handleChange","e","target","value","onSubmit","preventDefault","length","find","contact","alert","isLoading","type","onChange","required","styles","margin","pattern","title","btn","ContactList","map","listItem","phone","onClick","id","Filter","handleChangeFilter","App","contactsArray","filter","setFilter","data","toLowerCase","includes","store","configureStore","reducer","middleware","getDefaultMiddleware","root","document","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0461918a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3oNZZ\",\"label\":\"ContactForm_label__3hN_5\",\"fieldInput\":\"ContactForm_fieldInput__2n1jO\",\"validatorError\":\"ContactForm_validatorError__3u0gI\",\"btn\":\"ContactForm_btn__3pVnd\",\"margin\":\"ContactForm_margin__2GB66\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__sLex7\",\"btn\":\"ContactListItem_btn__1EQo9\",\"margin\":\"ContactListItem_margin__1FczI\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactApi = createApi({\n  reducerPath: 'contacts',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://61d36603b4c10c001712b94c.mockapi.io/contacts/',\n  }),\n  tagTypes: ['Contact'],\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => `/contacts`,\n      providesTags: ['Contact'],\n    }),\n    addContact: builder.mutation({\n      query: contactContent => ({\n        url: `/contacts`,\n        method: 'POST',\n        body: {\n          name: contactContent.name,\n          number: contactContent.number,\n        },\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useAddContactMutation,\n  useDeleteContactMutation,\n} = contactApi;\n","import s from './Spiner.module.css';\n\nexport default function Spiner() {\n  return (\n    <div className={s.loader}>\n      <div className={`${s.inner} ${s.one}`}></div>\n      <div className={`${s.inner} ${s.two}`}></div>\n      <div className={`${s.inner} ${s.three}`}></div>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useAddContactMutation } from '../../redux/contacts/contactsApi';\nimport styles from './ContactForm.module.css';\nimport Spiner from 'Components/Spiner/Spiner';\nfunction ContactForm({ contacts }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact, isFetching] = useAddContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.length === 100) {\n      alert('The maximum limit of 100 contacts has been reached.');\n      return;\n    }\n\n    contacts.find(contact => name === contact.name)\n      ? alert(`Name: ${name} reserved`)\n      : createContact({ name, number });\n    resetState();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {isFetching.isLoading && <Spiner />}\n      <label>\n        Name\n        <br />\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <br />\n      <label>\n        Number\n        <br />\n        <input\n          className={styles.margin}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport styles from './ContactListItem.module.scss';\nimport { useDeleteContactMutation } from '../../redux/contacts/contactsApi';\nimport Spinner from '../Spiner/Spiner';\nconst ContactList = ({ contacts }) => {\n  const [deleteContact, isFetching] = useDeleteContactMutation();\n\n  return (\n    <section>\n      {isFetching.isLoading && <Spinner />}\n      <ul>\n        {contacts.map(contact => (\n          <li key={contact.id} className={styles.listItem}>\n            {contact.name}: {contact.phone}\n            <button\n              className={styles.btn}\n              onClick={() => {\n                deleteContact(contact.id);\n                alert(`Contcats ${contact.name} be delete`);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nlet Filter = ({ handleChangeFilter }) => {\n  return (\n    <section>\n      <label>\n        Find contacts by name\n        <input\n          onChange={e => handleChangeFilter(e.target.value)}\n          name=\"filter\"\n          type=\"text\"\n        />\n      </label>\n    </section>\n  );\n};\n\nFilter.propTypes = {\n  handleChangeFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\nexport default Filter;\n","import './App.css';\nimport { useState } from 'react';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport Spiner from 'Components/Spiner/Spiner';\nimport { useFetchContactsQuery } from './redux/contacts/contactsApi';\n\nfunction App() {\n  const [filter, setFilter] = useState('');\n  const { data: contacts, isFetching } = useFetchContactsQuery();\n\n  const takeVisiblContacts = contactsArray =>\n    contactsArray.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  return (\n    <div>\n      {isFetching && <Spiner />}\n      <h1>Phonebook</h1>\n      <ContactForm contacts={contacts} />\n      <h2>Contacts</h2>\n\n      <Filter handleChangeFilter={setFilter} />\n\n      <ContactList contacts={takeVisiblContacts(contacts ?? [])} />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n/* import { setupListeners } from '@reduxjs/toolkit/query'; */\nimport { contactApi } from './contacts/contactsApi';\nexport const store = configureStore({\n  reducer: {\n    [contactApi.reducerPath]: contactApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactApi.middleware,\n  ],\n});\n\n/* setupListeners(store.dispatch); */\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport react from 'react';\nimport { Provider } from 'react-redux';\n/* import { BrowserRouter } from 'react-router-dom'; */\nimport { store } from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\nimport 'index.css';\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <react.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </react.StrictMode>,\n  root,\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spiner_loader__3aUvo\",\"inner\":\"Spiner_inner__2kg7b\",\"one\":\"Spiner_one__fRneS\",\"rotate-one\":\"Spiner_rotate-one__1tRuv\",\"two\":\"Spiner_two__3AElz\",\"rotate-two\":\"Spiner_rotate-two__4zGgP\",\"three\":\"Spiner_three__1H_z9\",\"rotate-three\":\"Spiner_rotate-three__1NeEQ\"};"],"sourceRoot":""}